package com.webapp.dqsys.security.handler;

import java.io.IOException;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.security.authentication.BadCredentialsException;
import org.springframework.security.authentication.CredentialsExpiredException;
import org.springframework.security.authentication.DisabledException;
import org.springframework.security.authentication.LockedException;
import org.springframework.security.core.AuthenticationException;
import org.springframework.security.web.authentication.AuthenticationFailureHandler;

import com.webapp.dqsys.util.MessageUtils;

public class CustomLoginFailureHandler implements AuthenticationFailureHandler {
	protected Logger log = LoggerFactory.getLogger(this.getClass());
	@Override
	public void onAuthenticationFailure(HttpServletRequest request, HttpServletResponse response, AuthenticationException exception) throws IOException, ServletException {

		String username = request.getParameter("username");
		String password = request.getParameter("password");
		String errormsg = exception.getMessage();
		
		if(exception instanceof BadCredentialsException) {
			errormsg = MessageUtils.BADCREDENTIALS;
		} else if(exception instanceof CredentialsExpiredException) {
		    errormsg = MessageUtils.CREDENTIALSEXPIRED;
		} else if(exception instanceof DisabledException) {
		    errormsg = MessageUtils.DISALED;
		} else if(exception instanceof LockedException) {
		    errormsg = MessageUtils.LOCKED;
		} 
//		else if(exception instanceof InternalAuthenticationServiceException) {
//		    errormsg = MessageUtils.NOTUSER;
//		}

		request.setAttribute("username", username);
		request.setAttribute("password", password);
 
		request.getRequestDispatcher("/login?error=true&errormsg="+errormsg).forward(request, response);
		
	 }

}
