<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org" xmlns:layout="http://www.ultraq.net.nz/thymeleaf/layout" layout:decorator="layout/mainLayout">
	<div layout:fragment="content">
		<!-- 상단 내비 / 타이틀 -->
		<div class="d-sm-flex align-items-center justify-content-between mgn_b0">
			<span class="col_gray01 font_14 mgn_b0"><img src="/img/icon/icon_home.png" alt="집 아이콘" class="vtc_unset"> PROFILING &gt; 스키마 구조 분석 &gt; 컬럼 구조 분석 </span>
		</div>
		<div class="d-sm-flex align-items-center justify-content-between mb-4">
			<h1 class="col_grey font_23 font_slim" style="color: gray; font-weight: 100;"> 컬럼 구조 분석</h1>
		</div>
	 
		<!-- 영역 -->
		<div class="row">
			<div class="col-lg mb-4">
				<!-- 조회 영역 -->
				<div class="card shadow mb-4" id="dbms" name="dbms">
					<div id="dbmsDiv" class="input_table" style="border: none;">
						<table>
	                        <colgroup>
	                            <col style="width:20%">
	                            <col style="width:25%">
	                            <col style="width:10%">
	                            <col style="width:25%">
	                            <col style="width:20%">
	                        </colgroup>
	                        <tbody>
	                            <tr>
	                                <th>
	                                	<label for="data"><span class="str">*</span> 스키마명</label>
	                                </th>
	                                <td>
	                                     <select name="tableSchema" id="tableSchema" onchange="fn_changeSchema()">
	                                    	<option>선택해주세요</option>
	                                    </select>
	                                </td>    
	                                <th>
	                                	<label for="name"><span class="str">*</span> 테이블명</label>
	                                </th>
	                                <td>
	                                    <select name="tableName" id="tableName" onchange="fn_changeTable()">
	                                    	<option>선택해주세요</option>
	                                    </select>
	                                </td>
	                                <td></td>
	                            </tr>
	                        </tbody>
						</table>
					</div>
					
					<div id="csvDiv" class="input_table" style="border: none;" disabled=true>
						<table>
	                        <colgroup>
	                            <col style="width:20%">
	                            <col style="width:25%">
	                            <col style="width:10%">
	                            <col style="width:25%">
	                            <col style="width:20%">
	                        </colgroup>
	                        <tbody>
	                            <tr>
	                                <th>
	                                	<label> 파일명 : </label>
	                                </th>
	                                <td colspan=4 >
	                                     <span id="fileName"></span>
	                                </td>    
	                            </tr>
	                        </tbody>
						</table>
					</div>
					
				</div>
				
				<!-- 내용 -->
				<div class="card shadow mb-4">
					<div class="card-body">
						<div id="columnAnalysisGrid" class="tb_type99" style="clear: both; min-height: 440px;"></div>
					</div>
				</div>
			</div>
		</div>
					
		<script th:inline="javascript" class="code-js">
		
		var sessionCon = /*[[ ${sessionCon} ]]*/;
		var fileName = /*[[ ${conFileName} ]]*/;
		$(document).ready(function() { 
			// sessionCon 체크
			isSessionConChk(sessionCon);
			if(fileName == ''){
				$('#dbmsDiv').css('display','block');
				$('#csvDiv').css('display','none');
				/* chosen Select Box 관련 추가  */
				/* 2019-07-29 최보람 */
				$("#tableSchema, #tableName").chosen({
					search_contains : true,
					width : 230,
					no_results_text : "검색결과가 없습니다. : "
				});
				
				fn_selectTableSchema();
			
			}else{
				$('#dbmsDiv').css('display','none');
				$('#csvDiv').css('display','block');
				$("#fileName").text(fileName);
				selectCsvInfo(sessionCon);
			}
			
		});
		
		function selectCsvInfo(sessionCon){
			
			var data = {
					"dgnssDbmsId":sessionCon,
					"tabType":'csv'
			};
			$.ajax({
				url: "/mngr/basicInfo/selectDbList",
				data : data,
				success: function(data){
					var obj = JSON.parse(data);
					var dataList = obj.result;
					var tableName = "";
					var tableSchema = "";
					
					for(var i = 0; i < dataList.length; i++){
						tableName = dataList[i].dgnssDbmsNm.replace(fileName, '');
						tableName = tableName.replace('(', '').replace(')', '');
						tableSchema = dataList[i].database;
					}
					selectColumnAnalysis(tableName, tableSchema);
				}
			});
		}
		
		function fn_selectTableSchema(){
			var option = "";
			var Schema = /*[[ ${schema} ]]*/;
			$.ajax({
				url: "/mngr/analysis/selectColumnAnalysis",
				success: function(data){
					var jsonData = JSON.parse(data);
					for(var i = 0; i < jsonData.length; i++){
						var selected = "";
						if(Schema.trim().toUpperCase() == jsonData[i].OWNER.toUpperCase()) {
							selected = "selected=true";
							
						}else{
							if(jsonData.length == 1){
								//selected = "selected=true";
								//selDbmsTableListBox();
							}else{
								selected = "";
							}
						}
						var option  = $("<option value="+jsonData[i].OWNER+" "+selected+">"+jsonData[i].OWNER+"</option>");
						$("#tableSchema").append(option);
													
						/* 데이터 연결 후 option 생성 시 마다 update를 해 주어야 chosen이 작동함 */
						$("#tableSchema").trigger("chosen:updated");
						
						
					}
					fn_changeSchema();
				}
			});
			
		}
		
		function fn_changeSchema(){
			var option = "";
			var tableSchema = $("#tableSchema").val();
			console.log("1. tableSchema : "+tableSchema);
			if(tableSchema == ""){
				tableSchema = /*[[ ${schema} ]]*/;
			}
			console.log("2. tableSchema : "+tableSchema);
			$("#tableName").empty();
			$("#columnAnalysisGrid").empty();
			
			option  = $("<option>선택해주세요</option>");
			$("#tableName").append(option);
			
			$.ajax({
				url: "/mngr/analysis/selectTable",
				data: {"tableSchema":tableSchema},
				success: function(data){
					var jsonData = JSON.parse(data);
					
					for(var i = 0; i < jsonData.length; i++){
						option  = $("<option>"+jsonData[i].TABLENAME+"</option>");
						$("#tableName").append(option);
		
						/* 데이터 연결 후 option 생성 시 마다 update를 해 주어야 chosen이 작동함 */
						$("#tableName").trigger("chosen:updated");
					} 
				}
				
			});
		}
		
		function fn_changeTable(){
			var tableName = $("#tableName").val();
			var tableSchema = $("#tableSchema").val();
			console.log("tableName : "+tableName);
			console.log("tableSchema : "+tableSchema);
			
			$("#columnAnalysisGrid").empty();
			$.ajax({
				url: "/mngr/analysis/selectColumnAnalysis",
				data: {"tableName":tableName, "tableSchema":tableSchema},
				success: function(data){
					var jsonData = JSON.parse(data);
					
					fn_setGrid(jsonData);
				}
			});
			
		}
		
		function selectColumnAnalysis(tableName, tableSchema){
			console.log("tableName : "+tableName);
			console.log("tableSchema : "+tableSchema);
			
			$("#columnAnalysisGrid").empty();
			$.ajax({
				url: "/mngr/analysis/selectColumnAnalysis",
				data: {"tableName":tableName, "tableSchema":tableSchema},
				success: function(data){
					var jsonData = JSON.parse(data);
					
					fn_setGrid(jsonData);
				}
			});
			
		}
		
		function fn_setGrid(data){
			var columns;
			if(fileName == ''){
				columns = [
				{header: '컬럼명', name: 'columnName', whiteSpace: 'normal', sortable: true, align:'center'},			
				{header: 'Data 타입', name: 'dataType', whiteSpace: 'normal', sortable: true,  width: 100,align:'center'}, 
				{header: 'Data 길이', name: 'dataLength', whiteSpace: 'normal', sortable: true,  width: 100,align:'right'}, 
				{header: 'Data 정밀도', name: 'dataPrecision', whiteSpace: 'normal', sortable: true,  width: 100,align:'right'}, 
				{header: 'Data 스케일', name: 'dataScale', whiteSpace: 'normal', sortable: true,  width: 100,align:'right'},
				{header: '널허용',name: 'nullable', whiteSpace: 'normal', sortable: true,  width: 100,align:'center'},
				{header: '기본값',name: 'dataDefault', whiteSpace: 'normal', sortable: true,  width: 100,align:'center'},
				{header: '최소값',name: 'lowValue', whiteSpace: 'normal', sortable: true, align:'left'},
				{header: '최대값',name: 'highValue', whiteSpace: 'normal', sortable: true, align:'left'},
				{header: '컬럼설명',name: 'comments', whiteSpace: 'normal', sortable: true, align:'left'}
				];
			}else{
				columns = [
				{header: '컬럼명', name: 'comments', whiteSpace: 'normal', sortable: true, align:'center'},			
				{header: 'Data 타입', name: 'dataType', whiteSpace: 'normal', sortable: true,  width: 100,align:'center'}, 
				{header: 'Data 길이', name: 'dataLength', whiteSpace: 'normal', sortable: true,  width: 100,align:'right'}, 
				{header: 'Data 정밀도', name: 'dataPrecision', whiteSpace: 'normal', sortable: true,  width: 100,align:'right'}, 
				{header: 'Data 스케일', name: 'dataScale', whiteSpace: 'normal', sortable: true,  width: 100,align:'right'},
				{header: '널허용',name: 'nullable', whiteSpace: 'normal', sortable: true,  width: 100,align:'center'},
				{header: '기본값',name: 'dataDefault', whiteSpace: 'normal', sortable: true,  width: 100,align:'center'},
				{header: '최소값',name: 'lowValue', whiteSpace: 'normal', sortable: true, align:'left'},
				{header: '최대값',name: 'highValue', whiteSpace: 'normal', sortable: true, align:'left'},
				{header: '컬럼설명',name: 'comments', whiteSpace: 'normal', sortable: true, align:'left'}
				];
			}
			const columnAnalysisGrid = new tui.Grid({
		           el : document.getElementById("columnAnalysisGrid"),
		           data : data,
		           scrollX : false,
		           scrollY : false,
		           rowHeight : 40,
		           minBodyHeight : 40,
		           header: {
		             height: 50
		           },
		           columns : columns
		     });
		     
		     const extOptions = {
		           cell: {
		                focused: {
		                 border: 0 // 선택 셀 강조 표시 x
		             }
		           }
		     };
		     
		     tui.Grid.applyTheme('default', extOptions);
		     
		     columnAnalysisGrid.resetData(data);
		}
		
		
		</script>
	</div>    
</html>