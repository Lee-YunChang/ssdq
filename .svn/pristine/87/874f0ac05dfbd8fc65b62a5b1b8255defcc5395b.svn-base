<%@ page language="java" contentType="text/html; charset=utf-8" pageEncoding="utf-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>

<!DOCTYPE html>
<html>
	<head>
		<meta charset="UTF-8">
		<c:import url="/common/pageLink.do?link=/mngr/cmmn/inc/header_inc" />
		<title>Insert title here</title>
	</head>
	<body id="page-top">
		<div id="wrapper">
			<c:import url="/common/pageLink.do?link=/mngr/cmmn/inc/left_inc" />
			
			<!-- Content Wrapper -->
			<div id="content-wrapper" class="d-flex flex-column">
				<!-- 메인 -->
				<div id="content">
					<!-- 상단영역 -->
					<c:import url="/common/pageLink.do?link=/mngr/cmmn/inc/top_inc" />
				
					<!-- 본문 -->
					<div class="container-fluid">
						
						<!-- 상단 내비 / 타이틀 -->
						<div class="d-sm-flex align-items-center justify-content-between mgn_b0">
                  			<span class="col_gray01 font_14 mgn_b0"><img src="/resources/img/icon/icon_home.png" alt="집 아이콘" class="vtc_unset"> BASIC &gt; 데이터연결</span>
	                    </div>
	                    
	                    <div class="d-sm-flex align-items-center justify-content-between mb-4">
							<h1 class="col_grey font_23 font_slim"> 데이터연결</h1>
							<!-- <h1 class="col_grey font_23 font_slim"></i> 진단대상 데이터베이스 정보</h1> -->
	                    </div>
	                    
	                    <ul class="nav nav-tabs">
							<li class="nav-item">
								<a class="nav-link active" id="tab1" href="#none" onclick="fn_tabLink(this)">DBMS</a>
							</li>
							<li class="nav-item">
								<a class="nav-link" id="tab2" href="#none" onclick="fn_tabLink(this)">CSV</a>
							</li>
						</ul>
	                    
						<!-- 영역 -->
						<div class="row">
							<div class="col-lg mb-4">
								<!-- 내용 -->
								<div class="card shadow mb-4">
									<input type="hidden" id="itemsPerPage" name="itemsPerPage" value="10"/>
	                                <input type="hidden" id="ckBtn" name="ckBtn" value="" />
	                                
	                                <div class="card-body">
	                                    <div id ="grid" class="tb_type99" ></div>
	                                    <div id="pagination" class="tui-pagination"></div>
	                                </div>
	                                
					            </div>
							</div>
						</div>
					</div>
				</div>
				
				<!-- 풋터 -->
				<c:import url="/common/pageLink.do?link=/mngr/cmmn/inc/footer_inc" />
			</div>
		</div>
		
	</body>

<script type="text/javascript"  class="code-js">

var tabType = "";
// 페이지 로드시 적용 설정
$(document).ready(function() {
	var startTab = $("#tab1");
	fn_tabLink(startTab);
	
	fn_selDataList();
});

function fn_searchTab(tabId){
	switch (tabId) {
		case "tab1" : fn_search('dbms');
		break;
	  	case "tab2" : fn_search('csv');
	    break;
	}
}

function fn_search(type){
	fn_selDataList(type);
}

// 목록 정보를 Ajax를 이용하여 가지고 온다.
function fn_selDataList(type){
	var pageIndex = $('#pageIndex').val();
	var searchValue = $('#searchValue').val();
	var itemsPerPage = $("#itemsPerPage").val();
	tabType = type;
	
	var params = {
		"searchValue" : searchValue,
		"pageIndex" : pageIndex,
		"itemsPerPage" : itemsPerPage,
		"tabType" : tabType
	}
	
	$.ajax({
		url: '/mngr/basicInfo/selectDbList',
		data: params,
		success: function(data){
			var obj = JSON.parse(data);
			var dataList = obj.result;
			var totalCnt = obj.totalCnt;
			
			fn_setDataListGrid(dataList);
			/* 페이징 function 호출 */
			fn_pagination(totalCnt);
		}
	});
}

// 조회 목록 리스트를 그리드 형식으로 화면 구성 한다.
function fn_setDataListGrid(listData){
	// 화면 초기화 처리
	$("#grid").empty();
	// 조회 컬럼 목록
	// Columns: insttCode, dgnssDbmsId, dgnssDbmsNm, dbmsKnd, dbmsVer, ip, port, schema, sid, database, paramtr, id, password, rm, useAt, registDt
	
	var columns = "";
	
	tabType = tabType === undefined ? 'dbms' : tabType;
	
	if(tabType == 'dbms'){
		columns = [
			{header : '구분', title : '구분', name : 'dbmsKnd', width: 100, align: 'center'}, 
			{header : '진단대상데이터베이스명', title : '진단대상데이터베이스명', name : 'dgnssDbmsNm'}, 
			{header : '서버IP', title : '서버IP', name : 'ip', width: 100, align: 'center'}, 
			{header : '서버PORT', title : '서버PORT', name : 'port', width: 100, align: 'center'}, 
			{header : 'Database', title : 'Database', name : 'database', width: 100, align: 'center'},
			{header : '접속계정', title : '접속계정', name : 'id', width: 100, align: 'center'},
			{header : '비고', title : '비고', name : 'rm', width: 220, align: 'center', formatter : function(value, options){
					var html  = "";
					var display = "";
					html += "<input type='button' class='btn btn_select btn_wd30' data-value='CON' value='접속' />&nbsp;&nbsp;";
					if(value.value == 'dq_database'){
						//display = "disable='true'";
					}
					html += "<input type='button' class='btn btn_select btn_wd30' data-value='SEL' value='상세' />";
					return html;
				}
			}
		];
		
	}else{
		
		columns = [
			{header : '구분', title : '구분', name : 'dbmsKnd', width: 100, align: 'center'}, 
			{header : 'CSV 파일 명', title : 'CSV 파일 명', name : 'dgnssDbmsNm'}, 
			{header : '비고', title : '비고', name : 'rm', width: 220, align: 'center', formatter : function(value, options){
					var html  = "";
					var display = "";
					html += "<input type='button' class='btn btn_select btn_wd30' data-value='CON' value='접속' />&nbsp;&nbsp;";
					if(value.value == 'dq_database'){
						//display = "disable='true'";
					}
					return html;
				}
			}
		];
	}
	
	const dataListGrid = new tui.Grid({
		el : document.getElementById("grid"),
		data : listData,
		rowHeaders: ['rowNum'],
		scrollX : false,
		scrollY : false,
		rowHeight : 40,
		minBodyHeight : 40,
		//bodyHeight : 400,
		header: {
		  height: 50
		},
		columns : columns
	});
	
	const extOptions = {
		cell: {
			focused: {
	            border: 0 // 선택 셀 강조 표시 x
	        }
		}
	};
	
	tui.Grid.applyTheme('default', extOptions);
	
	dataListGrid.on('click', function(ev) {
  		var inText = ev.nativeEvent.target.innerText;
  		var obj = ev.nativeEvent.target;
  		var mode = $(obj).data("value");
  		
  		if(ev.columnName === 'rm'){
  			var item = dataListGrid.getRow(ev.rowKey);
  			
  			console.log("item = ", item);
  			console.log("mode = ", mode);
  			
  			if(mode != undefined){
  	  			if(mode == 'CON'){
  	  				connectDbms(item);
  	  	  		}
  	  	  		if(mode == 'SEL'){
  	  	  			location.href = "/mngr/basicInfo/dataConnProp.do?dgnssDbmsId="+item.dgnssDbmsId;
  	  	  	  	}
  			}
  		}
  	});
	
	dataListGrid.resetData(listData);
}


// 선택된 지정 DB 접속 정보를 세션에 등록한다.
function connectDbms(obj){
	
	console.log("obj = ", obj);
	
	var dgnssDbmsId = obj.dgnssDbmsId;
	
	if(confirm("선택하신 DBMS로 접속 설정을 하시겠습니까?")){
		
		$.ajax({
			url: "/mngr/basicInfo/connectDbms",
			data: {dgnssDbmsId : dgnssDbmsId} ,
			success: function(data){
				// 처리 완료시 페이지를 리로드 하여 세션에 저장된 접속 URL 정보를 확인 한다.
				location.href = "/mngr/basicInfo/dgnssDbmsList";
			}
		});
		
	}
}

</script>


	
</html>